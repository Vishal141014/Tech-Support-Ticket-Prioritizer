{"ast":null,"code":"var _jsxFileName = \"D:\\\\XLR8\\\\Tech_Support_Ticket_Prioritizer\\\\web-ui\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\n\n// API base URL\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = 'http://localhost:5000/api';\n\n// Create context\nconst AuthContext = /*#__PURE__*/createContext();\n\n// Custom hook to use the auth context\nexport const useAuth = () => {\n  _s();\n  return useContext(AuthContext);\n};\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  // Check if user is authenticated on mount\n  useEffect(() => {\n    // Check localStorage for token\n    const token = localStorage.getItem('auth_token');\n    if (token) {\n      fetchCurrentUser(token);\n    }\n  }, []);\n\n  // Fetch current user with the token\n  const fetchCurrentUser = async token => {\n    try {\n      const config = {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      };\n      const response = await axios.get(`${API_URL}/auth/me`, config);\n      if (response.data.success) {\n        setUser(response.data.data);\n        setIsAuthenticated(true);\n      }\n    } catch (err) {\n      // Invalid token or other error\n      localStorage.removeItem('auth_token');\n      setIsAuthenticated(false);\n      setUser(null);\n    }\n  };\n\n  // Login function\n  const login = async (email, password) => {\n    setLoading(true);\n    setError(null);\n    try {\n      console.log('Attempting login with:', {\n        email\n      });\n      const response = await fetch(`${API_URL}/auth/login`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email,\n          password\n        })\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        throw new Error(data.message || 'Authentication failed');\n      }\n\n      // Store token in localStorage\n      localStorage.setItem('auth_token', data.token);\n      localStorage.setItem('auth_user', JSON.stringify(data.user));\n\n      // Update state\n      setUser(data.user);\n      setIsAuthenticated(true);\n      console.log('Login successful:', data.user.name);\n      return true;\n    } catch (err) {\n      console.error('Login error:', err.message);\n      setError(err.message || 'Authentication failed');\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Register function\n  const register = async (name, email, password) => {\n    setLoading(true);\n    setError(null);\n    try {\n      console.log('Attempting registration with:', {\n        name,\n        email\n      });\n      const response = await fetch(`${API_URL}/auth/register`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name,\n          email,\n          password\n        })\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        throw new Error(data.message || 'Registration failed');\n      }\n\n      // Store token in localStorage\n      localStorage.setItem('auth_token', data.token);\n      localStorage.setItem('auth_user', JSON.stringify(data.user));\n\n      // Update state\n      setUser(data.user);\n      setIsAuthenticated(true);\n      console.log('Registration successful:', data.user.name);\n      return true;\n    } catch (err) {\n      console.error('Registration error:', err.message);\n      setError(err.message || 'Registration failed');\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Logout function\n  const logout = () => {\n    // Clear auth data\n    localStorage.removeItem('auth_token');\n\n    // Update state\n    setUser(null);\n    setIsAuthenticated(false);\n  };\n\n  // Get current user\n  const getCurrentUser = () => {\n    return user;\n  };\n\n  // Function to get auth header for API requests\n  const getAuthHeader = () => {\n    const token = localStorage.getItem('auth_token');\n    return token ? {\n      Authorization: `Bearer ${token}`\n    } : {};\n  };\n\n  // Context value\n  const value = {\n    isAuthenticated,\n    user,\n    loading,\n    error,\n    login,\n    logout,\n    register,\n    getCurrentUser,\n    getAuthHeader\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 177,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"Gnvi4J9qgHZsSXCwYatRFAm3nVM=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","useNavigate","axios","jsxDEV","_jsxDEV","API_URL","AuthContext","useAuth","_s","AuthProvider","children","_s2","isAuthenticated","setIsAuthenticated","user","setUser","loading","setLoading","error","setError","token","localStorage","getItem","fetchCurrentUser","config","headers","Authorization","response","get","data","success","err","removeItem","login","email","password","console","log","fetch","method","body","JSON","stringify","json","ok","Error","message","setItem","name","register","logout","getCurrentUser","getAuthHeader","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/XLR8/Tech_Support_Ticket_Prioritizer/web-ui/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\n// API base URL\r\nconst API_URL = 'http://localhost:5000/api';\r\n\r\n// Create context\r\nconst AuthContext = createContext();\r\n\r\n// Custom hook to use the auth context\r\nexport const useAuth = () => useContext(AuthContext);\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  // Check if user is authenticated on mount\r\n  useEffect(() => {\r\n    // Check localStorage for token\r\n    const token = localStorage.getItem('auth_token');\r\n    \r\n    if (token) {\r\n      fetchCurrentUser(token);\r\n    }\r\n  }, []);\r\n\r\n  // Fetch current user with the token\r\n  const fetchCurrentUser = async (token) => {\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`\r\n        }\r\n      };\r\n      \r\n      const response = await axios.get(`${API_URL}/auth/me`, config);\r\n      \r\n      if (response.data.success) {\r\n        setUser(response.data.data);\r\n        setIsAuthenticated(true);\r\n      }\r\n    } catch (err) {\r\n      // Invalid token or other error\r\n      localStorage.removeItem('auth_token');\r\n      setIsAuthenticated(false);\r\n      setUser(null);\r\n    }\r\n  };\r\n\r\n  // Login function\r\n  const login = async (email, password) => {\r\n    setLoading(true);\r\n    setError(null);\r\n    \r\n    try {\r\n      console.log('Attempting login with:', { email });\r\n      \r\n      const response = await fetch(`${API_URL}/auth/login`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n          email,\r\n          password\r\n        })\r\n      });\r\n      \r\n      const data = await response.json();\r\n      \r\n      if (!response.ok) {\r\n        throw new Error(data.message || 'Authentication failed');\r\n      }\r\n      \r\n      // Store token in localStorage\r\n      localStorage.setItem('auth_token', data.token);\r\n      localStorage.setItem('auth_user', JSON.stringify(data.user));\r\n      \r\n      // Update state\r\n      setUser(data.user);\r\n      setIsAuthenticated(true);\r\n      \r\n      console.log('Login successful:', data.user.name);\r\n      return true;\r\n    } catch (err) {\r\n      console.error('Login error:', err.message);\r\n      setError(err.message || 'Authentication failed');\r\n      throw err;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Register function\r\n  const register = async (name, email, password) => {\r\n    setLoading(true);\r\n    setError(null);\r\n    \r\n    try {\r\n      console.log('Attempting registration with:', { name, email });\r\n      \r\n      const response = await fetch(`${API_URL}/auth/register`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n          name,\r\n          email,\r\n          password\r\n        })\r\n      });\r\n      \r\n      const data = await response.json();\r\n      \r\n      if (!response.ok) {\r\n        throw new Error(data.message || 'Registration failed');\r\n      }\r\n      \r\n      // Store token in localStorage\r\n      localStorage.setItem('auth_token', data.token);\r\n      localStorage.setItem('auth_user', JSON.stringify(data.user));\r\n      \r\n      // Update state\r\n      setUser(data.user);\r\n      setIsAuthenticated(true);\r\n      \r\n      console.log('Registration successful:', data.user.name);\r\n      return true;\r\n    } catch (err) {\r\n      console.error('Registration error:', err.message);\r\n      setError(err.message || 'Registration failed');\r\n      throw err;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Logout function\r\n  const logout = () => {\r\n    // Clear auth data\r\n    localStorage.removeItem('auth_token');\r\n    \r\n    // Update state\r\n    setUser(null);\r\n    setIsAuthenticated(false);\r\n  };\r\n\r\n  // Get current user\r\n  const getCurrentUser = () => {\r\n    return user;\r\n  };\r\n\r\n  // Function to get auth header for API requests\r\n  const getAuthHeader = () => {\r\n    const token = localStorage.getItem('auth_token');\r\n    return token ? { Authorization: `Bearer ${token}` } : {};\r\n  };\r\n\r\n  // Context value\r\n  const value = {\r\n    isAuthenticated,\r\n    user,\r\n    loading,\r\n    error,\r\n    login,\r\n    logout,\r\n    register,\r\n    getCurrentUser,\r\n    getAuthHeader\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n}; "],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,UAAU,EAAEC,SAAS,QAAQ,OAAO;AAC7E,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,KAAK,MAAM,OAAO;;AAEzB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,OAAO,GAAG,2BAA2B;;AAE3C;AACA,MAAMC,WAAW,gBAAGT,aAAa,CAAC,CAAC;;AAEnC;AACA,OAAO,MAAMU,OAAO,GAAGA,CAAA;EAAAC,EAAA;EAAA,OAAMT,UAAU,CAACO,WAAW,CAAC;AAAA;AAACE,EAAA,CAAxCD,OAAO;AAEpB,OAAO,MAAME,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAC5C,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;EAC7D,MAAM,CAACgB,IAAI,EAAEC,OAAO,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACkB,OAAO,EAAEC,UAAU,CAAC,GAAGnB,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACoB,KAAK,EAAEC,QAAQ,CAAC,GAAGrB,QAAQ,CAAC,IAAI,CAAC;;EAExC;EACAE,SAAS,CAAC,MAAM;IACd;IACA,MAAMoB,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC;IAEhD,IAAIF,KAAK,EAAE;MACTG,gBAAgB,CAACH,KAAK,CAAC;IACzB;EACF,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMG,gBAAgB,GAAG,MAAOH,KAAK,IAAK;IACxC,IAAI;MACF,MAAMI,MAAM,GAAG;QACbC,OAAO,EAAE;UACPC,aAAa,EAAE,UAAUN,KAAK;QAChC;MACF,CAAC;MAED,MAAMO,QAAQ,GAAG,MAAMzB,KAAK,CAAC0B,GAAG,CAAC,GAAGvB,OAAO,UAAU,EAAEmB,MAAM,CAAC;MAE9D,IAAIG,QAAQ,CAACE,IAAI,CAACC,OAAO,EAAE;QACzBf,OAAO,CAACY,QAAQ,CAACE,IAAI,CAACA,IAAI,CAAC;QAC3BhB,kBAAkB,CAAC,IAAI,CAAC;MAC1B;IACF,CAAC,CAAC,OAAOkB,GAAG,EAAE;MACZ;MACAV,YAAY,CAACW,UAAU,CAAC,YAAY,CAAC;MACrCnB,kBAAkB,CAAC,KAAK,CAAC;MACzBE,OAAO,CAAC,IAAI,CAAC;IACf;EACF,CAAC;;EAED;EACA,MAAMkB,KAAK,GAAG,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,KAAK;IACvClB,UAAU,CAAC,IAAI,CAAC;IAChBE,QAAQ,CAAC,IAAI,CAAC;IAEd,IAAI;MACFiB,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAE;QAAEH;MAAM,CAAC,CAAC;MAEhD,MAAMP,QAAQ,GAAG,MAAMW,KAAK,CAAC,GAAGjC,OAAO,aAAa,EAAE;QACpDkC,MAAM,EAAE,MAAM;QACdd,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDe,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACnBR,KAAK;UACLC;QACF,CAAC;MACH,CAAC,CAAC;MAEF,MAAMN,IAAI,GAAG,MAAMF,QAAQ,CAACgB,IAAI,CAAC,CAAC;MAElC,IAAI,CAAChB,QAAQ,CAACiB,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAChB,IAAI,CAACiB,OAAO,IAAI,uBAAuB,CAAC;MAC1D;;MAEA;MACAzB,YAAY,CAAC0B,OAAO,CAAC,YAAY,EAAElB,IAAI,CAACT,KAAK,CAAC;MAC9CC,YAAY,CAAC0B,OAAO,CAAC,WAAW,EAAEN,IAAI,CAACC,SAAS,CAACb,IAAI,CAACf,IAAI,CAAC,CAAC;;MAE5D;MACAC,OAAO,CAACc,IAAI,CAACf,IAAI,CAAC;MAClBD,kBAAkB,CAAC,IAAI,CAAC;MAExBuB,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAER,IAAI,CAACf,IAAI,CAACkC,IAAI,CAAC;MAChD,OAAO,IAAI;IACb,CAAC,CAAC,OAAOjB,GAAG,EAAE;MACZK,OAAO,CAAClB,KAAK,CAAC,cAAc,EAAEa,GAAG,CAACe,OAAO,CAAC;MAC1C3B,QAAQ,CAACY,GAAG,CAACe,OAAO,IAAI,uBAAuB,CAAC;MAChD,MAAMf,GAAG;IACX,CAAC,SAAS;MACRd,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;;EAED;EACA,MAAMgC,QAAQ,GAAG,MAAAA,CAAOD,IAAI,EAAEd,KAAK,EAAEC,QAAQ,KAAK;IAChDlB,UAAU,CAAC,IAAI,CAAC;IAChBE,QAAQ,CAAC,IAAI,CAAC;IAEd,IAAI;MACFiB,OAAO,CAACC,GAAG,CAAC,+BAA+B,EAAE;QAAEW,IAAI;QAAEd;MAAM,CAAC,CAAC;MAE7D,MAAMP,QAAQ,GAAG,MAAMW,KAAK,CAAC,GAAGjC,OAAO,gBAAgB,EAAE;QACvDkC,MAAM,EAAE,MAAM;QACdd,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDe,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACnBM,IAAI;UACJd,KAAK;UACLC;QACF,CAAC;MACH,CAAC,CAAC;MAEF,MAAMN,IAAI,GAAG,MAAMF,QAAQ,CAACgB,IAAI,CAAC,CAAC;MAElC,IAAI,CAAChB,QAAQ,CAACiB,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAChB,IAAI,CAACiB,OAAO,IAAI,qBAAqB,CAAC;MACxD;;MAEA;MACAzB,YAAY,CAAC0B,OAAO,CAAC,YAAY,EAAElB,IAAI,CAACT,KAAK,CAAC;MAC9CC,YAAY,CAAC0B,OAAO,CAAC,WAAW,EAAEN,IAAI,CAACC,SAAS,CAACb,IAAI,CAACf,IAAI,CAAC,CAAC;;MAE5D;MACAC,OAAO,CAACc,IAAI,CAACf,IAAI,CAAC;MAClBD,kBAAkB,CAAC,IAAI,CAAC;MAExBuB,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAER,IAAI,CAACf,IAAI,CAACkC,IAAI,CAAC;MACvD,OAAO,IAAI;IACb,CAAC,CAAC,OAAOjB,GAAG,EAAE;MACZK,OAAO,CAAClB,KAAK,CAAC,qBAAqB,EAAEa,GAAG,CAACe,OAAO,CAAC;MACjD3B,QAAQ,CAACY,GAAG,CAACe,OAAO,IAAI,qBAAqB,CAAC;MAC9C,MAAMf,GAAG;IACX,CAAC,SAAS;MACRd,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;;EAED;EACA,MAAMiC,MAAM,GAAGA,CAAA,KAAM;IACnB;IACA7B,YAAY,CAACW,UAAU,CAAC,YAAY,CAAC;;IAErC;IACAjB,OAAO,CAAC,IAAI,CAAC;IACbF,kBAAkB,CAAC,KAAK,CAAC;EAC3B,CAAC;;EAED;EACA,MAAMsC,cAAc,GAAGA,CAAA,KAAM;IAC3B,OAAOrC,IAAI;EACb,CAAC;;EAED;EACA,MAAMsC,aAAa,GAAGA,CAAA,KAAM;IAC1B,MAAMhC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC;IAChD,OAAOF,KAAK,GAAG;MAAEM,aAAa,EAAE,UAAUN,KAAK;IAAG,CAAC,GAAG,CAAC,CAAC;EAC1D,CAAC;;EAED;EACA,MAAMiC,KAAK,GAAG;IACZzC,eAAe;IACfE,IAAI;IACJE,OAAO;IACPE,KAAK;IACLe,KAAK;IACLiB,MAAM;IACND,QAAQ;IACRE,cAAc;IACdC;EACF,CAAC;EAED,oBACEhD,OAAA,CAACE,WAAW,CAACgD,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAA3C,QAAA,EAChCA;EAAQ;IAAA6C,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAAC/C,GAAA,CAvKWF,YAAY;AAAAkD,EAAA,GAAZlD,YAAY;AAAA,IAAAkD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}