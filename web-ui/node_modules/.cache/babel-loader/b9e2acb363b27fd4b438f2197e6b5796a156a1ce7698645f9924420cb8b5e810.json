{"ast":null,"code":"var _jsxFileName = \"D:\\\\XLR8\\\\Tech_Support_Ticket_Prioritizer\\\\web-ui\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useEffect } from 'react';\nimport axios from 'axios';\n\n// Create context\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\n\n// Custom hook to use the auth context\nexport const useAuth = () => {\n  _s();\n  return useContext(AuthContext);\n};\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Check if user is authenticated on mount\n  useEffect(() => {\n    const checkAuth = async () => {\n      const token = localStorage.getItem('auth_token');\n      if (token) {\n        try {\n          // This would normally verify the token with your backend\n          // For demo purposes, we'll just set a user based on the token\n          setUser({\n            id: 'admin',\n            name: 'Admin User',\n            role: 'admin',\n            avatar: 'https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=facearea&facepad=2&w=256&h=256&q=80'\n          });\n        } catch (err) {\n          console.error('Authentication error:', err);\n          localStorage.removeItem('auth_token');\n          setError('Authentication failed. Please log in again.');\n        }\n      }\n      setLoading(false);\n    };\n    checkAuth();\n  }, []);\n\n  // Login function\n  const login = async (email, password) => {\n    setLoading(true);\n    setError(null);\n    try {\n      // This would normally call your backend API\n      // For demo purposes, we'll just simulate a successful login for admin credentials\n      if (email === 'admin@example.com' && password === 'admin123') {\n        // Simulate token response\n        const token = 'demo_token_123456';\n\n        // Store token\n        localStorage.setItem('auth_token', token);\n\n        // Set user\n        setUser({\n          id: 'admin',\n          name: 'Admin User',\n          role: 'admin',\n          email: email,\n          avatar: 'https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=facearea&facepad=2&w=256&h=256&q=80'\n        });\n        return true;\n      } else {\n        throw new Error('Invalid credentials');\n      }\n    } catch (err) {\n      setError(err.message || 'Login failed');\n      return false;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Logout function\n  const logout = () => {\n    localStorage.removeItem('auth_token');\n    setUser(null);\n  };\n\n  // Get auth header for API requests\n  const getAuthHeader = () => {\n    const token = localStorage.getItem('auth_token');\n    return token ? {\n      Authorization: `Bearer ${token}`\n    } : {};\n  };\n\n  // Context value\n  const value = {\n    user,\n    loading,\n    error,\n    login,\n    logout,\n    getAuthHeader,\n    isAuthenticated: !!user\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"PA9FxEY9xSNRrsSqaLtbYei52Hs=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","axios","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","AuthProvider","children","_s2","user","setUser","loading","setLoading","error","setError","checkAuth","token","localStorage","getItem","id","name","role","avatar","err","console","removeItem","login","email","password","setItem","Error","message","logout","getAuthHeader","Authorization","value","isAuthenticated","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/XLR8/Tech_Support_Ticket_Prioritizer/web-ui/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\n// Create context\r\nconst AuthContext = createContext();\r\n\r\n// Custom hook to use the auth context\r\nexport const useAuth = () => useContext(AuthContext);\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  // Check if user is authenticated on mount\r\n  useEffect(() => {\r\n    const checkAuth = async () => {\r\n      const token = localStorage.getItem('auth_token');\r\n      \r\n      if (token) {\r\n        try {\r\n          // This would normally verify the token with your backend\r\n          // For demo purposes, we'll just set a user based on the token\r\n          setUser({\r\n            id: 'admin',\r\n            name: 'Admin User',\r\n            role: 'admin',\r\n            avatar: 'https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=facearea&facepad=2&w=256&h=256&q=80',\r\n          });\r\n        } catch (err) {\r\n          console.error('Authentication error:', err);\r\n          localStorage.removeItem('auth_token');\r\n          setError('Authentication failed. Please log in again.');\r\n        }\r\n      }\r\n      \r\n      setLoading(false);\r\n    };\r\n    \r\n    checkAuth();\r\n  }, []);\r\n\r\n  // Login function\r\n  const login = async (email, password) => {\r\n    setLoading(true);\r\n    setError(null);\r\n    \r\n    try {\r\n      // This would normally call your backend API\r\n      // For demo purposes, we'll just simulate a successful login for admin credentials\r\n      if (email === 'admin@example.com' && password === 'admin123') {\r\n        // Simulate token response\r\n        const token = 'demo_token_123456';\r\n        \r\n        // Store token\r\n        localStorage.setItem('auth_token', token);\r\n        \r\n        // Set user\r\n        setUser({\r\n          id: 'admin',\r\n          name: 'Admin User',\r\n          role: 'admin',\r\n          email: email,\r\n          avatar: 'https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=facearea&facepad=2&w=256&h=256&q=80',\r\n        });\r\n        \r\n        return true;\r\n      } else {\r\n        throw new Error('Invalid credentials');\r\n      }\r\n    } catch (err) {\r\n      setError(err.message || 'Login failed');\r\n      return false;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Logout function\r\n  const logout = () => {\r\n    localStorage.removeItem('auth_token');\r\n    setUser(null);\r\n  };\r\n\r\n  // Get auth header for API requests\r\n  const getAuthHeader = () => {\r\n    const token = localStorage.getItem('auth_token');\r\n    return token ? { Authorization: `Bearer ${token}` } : {};\r\n  };\r\n\r\n  // Context value\r\n  const value = {\r\n    user,\r\n    loading,\r\n    error,\r\n    login,\r\n    logout,\r\n    getAuthHeader,\r\n    isAuthenticated: !!user,\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}